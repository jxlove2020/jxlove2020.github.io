<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jxlove2020.github.io/</id><title>Joseph.Note</title><subtitle>Joseph 의 개인 기술 노트</subtitle> <updated>2022-12-14T15:01:44+09:00</updated> <author> <name>jxlove2020</name> <uri>https://jxlove2020.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://jxlove2020.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://jxlove2020.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2022 jxlove2020 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>MSSQL 데이터베이스 정리 2</title><link href="https://jxlove2020.github.io/posts/mssql-select/" rel="alternate" type="text/html" title="MSSQL 데이터베이스 정리 2" /><published>2022-04-20T21:10:00+09:00</published> <updated>2022-04-20T21:10:00+09:00</updated> <id>https://jxlove2020.github.io/posts/mssql-select/</id> <content src="https://jxlove2020.github.io/posts/mssql-select/" /> <author> <name>jxlove2020</name> </author> <category term="MSSQL" /> <summary> MS_SQL SELECT 제 기준 SQL Server 2016 with SP2 환경으로 설치하였습니다. MS_SQL Sample Database Pubs DB 다운로드 Pubs (책 판매와 출판에 대한 샘플 DB) Adventure Works DB 다운로드 Adventure Works (자전거 회사에 대한 샘플 DB) SELECT 절 pubs (책 판매와 출판에 대한 샘플 DB) 사용 -- SELECT 기본형태 SELECT stor_id, ord_num, qty, title_id FROM dbo.sales; -- WHERE 조건절 ( 7067 상점아이디가 속해 있는 값 가져오기 ) SELECT * FROM dbo.sales WHERE store_id = 7067; -- 모든열 가져오기 SE... </summary> </entry> <entry><title>MSSQL 데이터베이스 정리 1</title><link href="https://jxlove2020.github.io/posts/mssql/" rel="alternate" type="text/html" title="MSSQL 데이터베이스 정리 1" /><published>2022-04-16T21:10:00+09:00</published> <updated>2022-04-27T09:11:28+09:00</updated> <id>https://jxlove2020.github.io/posts/mssql/</id> <content src="https://jxlove2020.github.io/posts/mssql/" /> <author> <name>jxlove2020</name> </author> <category term="MSSQL" /> <summary> MS_SQL 제 기준 SQL Server 2016 with SP2 환경으로 설치하였습니다. MS_SQL Sample Database Pubs DB 다운로드 Pubs (책 판매와 출판에 대한 샘플 DB) Adventure Works DB 다운로드 Adventure Works (자전거 회사에 대한 샘플 DB) Pubs 데이터베이스 생성 MS_SQL 2016 SSMS(Microsoft SQL Server management Studio) 를 실행하고 다운 받은 instpubs.sql 파일을 열어서 실행 [F5] 시킵니다. 다른 방법으로 명령프롬프트 창에서 다운로드 받은 폴더로 이동해서 아래의 명령어를 실행시켜도 됩니다. &amp;gt; sqlcmd -i instpubs.sql Adventure W... </summary> </entry> <entry><title>Python 자료구조와 JSON 데이터 처리</title><link href="https://jxlove2020.github.io/posts/python_study/" rel="alternate" type="text/html" title="Python 자료구조와 JSON 데이터 처리" /><published>2022-03-17T21:10:00+09:00</published> <updated>2022-03-18T17:42:02+09:00</updated> <id>https://jxlove2020.github.io/posts/python_study/</id> <content src="https://jxlove2020.github.io/posts/python_study/" /> <author> <name>jxlove2020</name> </author> <category term="Python" /> <summary> Python 자료구조와 JSON 데이터 처리 # 클라이언트와 서버 사이 데이터 교환시 # 파이썬 객체 타입을 문자열 데이터로 변환 # 파이썬 문자열 데이터를 파이썬 객체 타입으로 변환 # 파이썬 대표적인 자료 구조 4개 =&amp;gt; List [], Tuple (), Dictionary {x: x}, Set {} 파이썬 딕셔너리 타입 # 파이썬 자료구조의 한 형태. "키(key) : 값(value)" 쌍을 요소로 갖는 컬렉션 객체 # 키(key)를 통하여 빠르게 값(value)을 찾아내는 해시테이블(Hash Table) 구조를 가지는 객체 # 파이썬에서 딕셔너리 객체는 "dict" 클래스 구현 # 딕셔너리의 키(key)는 값을 변경할 수 없다. =&amp;gt; 즉, Immutable 속성 # 딕셔너리의 ... </summary> </entry> <entry><title>포토샵 - 기본설정</title><link href="https://jxlove2020.github.io/posts/photoshop-setups/" rel="alternate" type="text/html" title="포토샵 - 기본설정" /><published>2022-02-25T21:10:00+09:00</published> <updated>2022-02-25T21:10:00+09:00</updated> <id>https://jxlove2020.github.io/posts/photoshop-setups/</id> <content src="https://jxlove2020.github.io/posts/photoshop-setups/" /> <author> <name>jxlove2020</name> </author> <category term="photoshop" /> <summary> 포토샵 실행 포토샵을 실행합니다. 설정 창을 여는 방법은 메뉴에서 편집 -&amp;gt; 환경설정 -&amp;gt; 일반 을 차례대로 선택합니다. 단축키 로 [Ctrl + K] 를 함께 눌러서 환경설정 창을 여는 방법도 있습니다. 환경설정 창 단위와 눈금자 탭 메뉴 설정 환경설정 창에서 단위와 눈금자 탭에서 단위 &amp;gt; 눈금자 - 픽셀 로 선택 단위 &amp;gt; 문자 - 픽셀 로 선택 안내선, 격자 및 분할 영역 환경설정 창에서 안내선, 격자 및 분할 영역 탭에서 격자 &amp;gt; 격자 간격을 100 픽셀 세분 10 으로 맞춰 줍니다. 확인 버튼을 클릭하여 설정창을 닫아 줍니다. 이렇게 기본 설정을 마치고 사용하시면 디자인 하실 때 편하실 거에요 ~ ^^ </summary> </entry> <entry><title>AWS putty 연결</title><link href="https://jxlove2020.github.io/posts/aws-putty/" rel="alternate" type="text/html" title="AWS putty 연결" /><published>2022-02-16T21:10:00+09:00</published> <updated>2022-02-22T14:02:18+09:00</updated> <id>https://jxlove2020.github.io/posts/aws-putty/</id> <content src="https://jxlove2020.github.io/posts/aws-putty/" /> <author> <name>jxlove2020</name> </author> <category term="aws" /> <summary> PuTTYgen 실행 - Priavate key 생성 PuTTYgen 을 실행하고 Load 버튼을 누릅니다. All Files( _ . _ ) 선택 하면 aws 인스턴스 생성시 만들어 놓은 key 파일을 불러옵니다. 열기버튼을 누르게 되면 공지 창이 보이면서 Successfully 라는 내용이 보입니다. 확인버튼을 누릅니다. 확인 버튼을 누르면 Key 부분 (검정색박스부분) 에 생성된 Key 가 보입니다. Save private key 버튼을 눌러서 적당한 이름으로 ppk 로 저장합니다. 예 버튼을 누릅니다. 적당한 이름으로 ppk를 저장합니다. ( 저는 그냥 pem 파일과 같은 이름으로 저장했습니다. ) PuTTY 접속 PuTTY 를 실행합니다. 아마존 웹... </summary> </entry> </feed>
